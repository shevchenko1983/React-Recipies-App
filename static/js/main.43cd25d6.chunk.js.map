{"version":3,"sources":["api/config.js","api/context.js","components/SearchInput.js","components/Header.js","api/recipies-api.js","components/top-components/TopProductItem.js","components/top-components/TopProductItemsWrapper.js","components/ContentProductItem.js","components/ContentProductItemsWrapper.js","components/ContentText.js","components/SingleProductContent.js","App.js","reportWebVitals.js","index.js"],"names":["SINGLE_RECIPIE_PATH","RECIPIE_CATEGORY_PATH","FAVORITES","parseSingleMealData","singleMealData","meal","Object","values","mealTitle","strMeal","mealImage","strMealThumb","instructions","strInstructions","categoryMeal","strCategory","ingredients","elem","includes","push","onSendProductToFavorites","product","productsArr","getProductFromLocalStorage","sendProductToLocalStorage","JSON","stringify","localStorage","setItem","key","parse","getItem","AppContext","React","createContext","SearchWrapper","styled","SearchInputWrapper","SubmitInput","SearchInput","useState","searchValue","setSearchValue","recipeName","setRecipeName","context","useContext","useEffect","getMealsBySearch","className","type","placeholder","value","onChange","e","target","to","pathname","onClick","HeaderWrapper","Header","getFavoritesMealsList","searchMealsByName","a","fetch","response","json","console","error","message","getMealByRandom","getMealById","mealId","getCategoryMealsListByCategoryName","categoryName","getAllCategoriesMeals","Item","TopProductItem","id","idCategory","title","image","strCategoryThumb","description","strCategoryDescription","getCategoryList","placement","trigger","mouseEnterDelay","mouseLeaveDelay","destroyTooltipOnHide","overlay","align","offset","overlayStyle","backgroundColor","color","maxWidth","margin","padding","borderRadius","maxHeight","overflow","boxShadow","overlayClassName","style","backgroundImage","ProductItemsWrapper","TopProductItemsWrapper","categoriesList","setCategoriesList","meals","length","then","log","categories","map","item","index","memo","ProductItem","ContentProductItem","favoritesMealsId","setFavoritesMealsId","favoriteMeal","setFavoriteMeal","idMeal","some","ContentProductItemsWrapper","showCategoryTitle","categoryTitle","mealsArr","forEach","ContentWrapper","ContentText","text","SingleProductWrapper","SingleProductContent","currMeal","setCurrMeal","parsedData","setParsedData","useHistory","location","split","entries","src","alt","withRouter","mealsListBySearch","setMealsListBySearch","mealsListByDefault","setMealsListByDefault","category","status","showCategoryProducts","setShowCategoryProducts","Provider","exact","path","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43cd25d6.chunk.js","sourcesContent":["export const SEARCH_MEALS_BY_NAME = 'https://www.themealdb.com/api/json/v1/1/search.php?s=';\r\nexport const GET_MEAL_BY_RANDOM = 'https://www.themealdb.com/api/json/v1/1/random.php';\r\nexport const GET_MEAL_BY_ID = 'https://www.themealdb.com/api/json/v1/1/lookup.php?i=';\r\nexport const GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME = 'https://www.themealdb.com/api/json/v1/1/filter.php?c=';\r\nexport const GET_ALL_CATEGORIES_MEALS_LIST = 'https://www.themealdb.com/api/json/v1/1/categories.php';\r\n\r\n//Base URL\r\nexport const BASE_URL = 'https://shevchenko1983.github.io/React-Recipies-App';\r\n//App Routing\r\nexport const SINGLE_RECIPIE_PATH = \"/recipie/\";\r\nexport const RECIPIE_CATEGORY_PATH = \"/category/\";\r\n\r\n//Keys in LocalStorage\r\nexport const FAVORITES = 'favoriteMeals';","import React from 'react';\r\nimport {FAVORITES} from \"./config\";\r\n\r\n\r\n//Parse data  SingleMeal\r\nexport const parseSingleMealData = (singleMealData) => {\r\n    let meal = Object.values(singleMealData)[0];\r\n    let {mealTitle = meal.strMeal,\r\n        mealImage = meal.strMealThumb,\r\n        instructions = meal.strInstructions,\r\n        categoryMeal = meal.strCategory,\r\n    } = meal;\r\n\r\n    //get ingredients List if they aren't empty\r\n    const ingredients = [];\r\n    for(let elem in meal){\r\n        if(elem.includes(\"strIngredient\") && meal[elem]){\r\n            ingredients.push(meal[elem]);\r\n        }\r\n    };\r\n\r\n    return {\r\n        mealTitle,\r\n        mealImage,\r\n        instructions,\r\n        ingredients,\r\n        categoryMeal\r\n    }\r\n};\r\n\r\n\r\nexport const onSendProductToFavorites = (product) => {\r\n    //let id = product.idMeal;\r\n    const productsArr = [];\r\n    //add to array productId\r\n    productsArr.push(product);\r\n    //get all values from LocalStorage\r\n    if(getProductFromLocalStorage(FAVORITES)){\r\n        productsArr.push(...getProductFromLocalStorage(FAVORITES));\r\n    }\r\n    //Put new product to these values, and push it back to LocalStorage\r\n    sendProductToLocalStorage(JSON.stringify(productsArr));\r\n    //return array of Favorites Products\r\n    //console.log(productsIdsArr);\r\n    return productsArr;\r\n};\r\n\r\nconst sendProductToLocalStorage = (product) => {\r\n    localStorage.setItem(FAVORITES, product);\r\n}\r\n\r\nexport const getProductFromLocalStorage = (key) => {\r\n    return JSON.parse(localStorage.getItem(key));\r\n}\r\n\r\n\r\n//Create AppContext for using via UseContext Hooks inside application\r\nexport const AppContext = React.createContext({});\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useContext, useEffect, useState} from \"react\";\r\nimport {BiSearchAlt2} from 'react-icons/bi';\r\nimport {AppContext} from \"../api/context\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst SearchWrapper = styled('div')`\r\n     display: inline-block;\r\n     width: 330px;\r\n     maxWidth: 50%;\r\n     position: relative;\r\n     text-align: left;\r\n     border-top-right-radius: 5px;\r\n     border-bottom-right-radius: 5px;\r\n     overflow: hidden;\r\n     \r\n     @media (max-width: 660px){\r\n        max-width: 80%;\r\n     }\r\n`;\r\n\r\n\r\nconst SearchInputWrapper = styled('input')`\r\n    padding: 5px 15px;\r\n    color: #3f3f3f;\r\n    background-color: #ffc0cb82;\r\n    width: 100%;\r\n    max-width: 330px;\r\n    margin: auto;\r\n    border: none;\r\n    border-radius: 5px;    \r\n    overflow: hidden;\r\n    \r\n    \r\n    &:focus{\r\n        outline:none;\r\n        box-shadow: 0 5px 6px #c571b76b;\r\n    }\r\n`;\r\n\r\nconst SubmitInput = styled('div')`   \r\n    color: #3f3f3f;\r\n    background-color: #fff;\r\n    width: 50px;\r\n    margin: auto;\r\n    border: none;\r\n    border-radius: 5px;\r\n    height: 26px;\r\n    display: inline-block;\r\n    right: 0px;\r\n    top: 0px;\r\n    position: absolute;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    \r\n    &:hover{\r\n      background-color: #f4f2f2;\r\n    }\r\n    \r\n    & svg{\r\n        position: relative;\r\n        top: 4px;\r\n        color: #3f3f3fa1;\r\n        width: 50px;\r\n        height: 20px;\r\n    }\r\n    \r\n    &:focus{\r\n        outline:none;\r\n        box-shadow: 0 5px 6px #c571b76b;\r\n    }\r\n`;\r\n\r\nconst SearchInput = () => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const [recipeName, setRecipeName] = useState(\"\");\r\n    const context = useContext(AppContext);\r\n\r\n    useEffect(() => {\r\n        if(recipeName){\r\n            context.getMealsBySearch(recipeName);\r\n        }\r\n    },[recipeName]);\r\n\r\n    //console.log(recipeName);\r\n\r\n    return(\r\n        <SearchWrapper className={\"search\"}>\r\n            <SearchInputWrapper type={\"text\"}\r\n                           placeholder={\"Search some recipie...\"}\r\n                           value={searchValue}\r\n                           onChange={(e) => setSearchValue(e.target.value)}\r\n            />\r\n            <SubmitInput>\r\n                <NavLink to={{pathname: \"/\"}}>\r\n                    <BiSearchAlt2 onClick={() => setRecipeName(searchValue)}/>\r\n                </NavLink>\r\n            </SubmitInput>\r\n\r\n        </SearchWrapper>\r\n    );\r\n};\r\n\r\nexport default SearchInput;","import React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchInput from \"./SearchInput\";\r\nimport {RiUserStarFill} from 'react-icons/ri';\r\nimport {AppContext} from \"../api/context\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nconst HeaderWrapper = styled('div')`\r\n    padding: 10px 20px;\r\n    border-bottom: 2px solid #cfa4bf;\r\n    box-shadow: 0px 5px 7px #c571b76b;\r\n    margin-bottom: 25px;\r\n    \r\n    & svg.favorite-icon{\r\n        font-size: 25px;\r\n        margin-left: 30px;\r\n        cursor: pointer;\r\n        \r\n        &:hover{\r\n            color: #f69400;\r\n        }\r\n    }  \r\n  \r\n`;\r\n\r\nconst Header = () => {\r\n    const context = useContext(AppContext);\r\n    return(\r\n        <HeaderWrapper className={\"header\"}>\r\n            <SearchInput/>\r\n            <NavLink to={{pathname: \"/\"}}>\r\n               <RiUserStarFill className={\"favorite-icon\"}\r\n                                onClick={() => context.getFavoritesMealsList()}\r\n                />\r\n            </NavLink>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import {\r\n    GET_ALL_CATEGORIES_MEALS_LIST,\r\n    GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME,\r\n    GET_MEAL_BY_ID,\r\n    GET_MEAL_BY_RANDOM,\r\n    SEARCH_MEALS_BY_NAME\r\n} from \"./config\";\r\n\r\n//get Meal be searching\r\nexport const searchMealsByName = async (searchValue) => {\r\n    try{\r\n        let response = await fetch(SEARCH_MEALS_BY_NAME + searchValue);\r\n        return await response.json();\r\n    }catch (e) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get Meal By Random\r\nexport const getMealByRandom = async () => {\r\n    try{\r\n        let response = await fetch(GET_MEAL_BY_RANDOM);\r\n        return await response.json();\r\n    }catch (e) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get Meal By Id\r\nexport const getMealById = async (mealId) => {\r\n    try{\r\n        let response = await fetch(GET_MEAL_BY_ID + mealId);\r\n        return await response.json();\r\n    }catch (e) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get Category Meals List By Category Name\r\nexport const getCategoryMealsListByCategoryName = async (categoryName) => {\r\n    try{\r\n        let response = await fetch(GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME + categoryName);\r\n        return await response.json();\r\n    }catch (e) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get ALL Categories Meals List\r\nexport const getAllCategoriesMeals = async () => {\r\n    try{\r\n        let response = await fetch(GET_ALL_CATEGORIES_MEALS_LIST);\r\n        return await response.json();\r\n    }catch (e) {\r\n        console.error(e.message);\r\n    }\r\n}","import React, {useContext} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppContext} from \"../../api/context\";\r\nimport Tooltip from \"rc-tooltip/lib/Tooltip\";\r\nimport {BASE_URL, RECIPIE_CATEGORY_PATH} from \"../../api/config\";\r\n\r\n\r\nconst Item = styled('div')`\r\n    width: 75px;\r\n    height: 75px;\r\n    border-radius: 50%;\r\n    border:3px solid #ffc0cb82;\r\n    background-size: 170%;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    box-shadow: 0px 4px 3px #c571b76b;\r\n    margin: 0px 12px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n \r\n    \r\n    & p{\r\n        position: relative;\r\n        top: -42px;\r\n        left: 0;\r\n        right: 0;\r\n        text-decoration: none;\r\n    }\r\n    & a{\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst TopProductItem = ({product}) => {\r\n    const context = useContext(AppContext);\r\n    let {id = product.idCategory,\r\n         title = product.strCategory,\r\n         image = product.strCategoryThumb,\r\n         description = product.strCategoryDescription} = product;\r\n\r\n\r\n\r\n    return(\r\n        <NavLink to={{pathname: RECIPIE_CATEGORY_PATH + title}} onClick={() => context.getCategoryList(title)}>\r\n            <Tooltip placement=\"bottom\"\r\n                     trigger={['hover']}\r\n                     mouseEnterDelay={0.3}\r\n                     mouseLeaveDelay={0.2}\r\n                     destroyTooltipOnHide={true}\r\n                     overlay={<span>{description}</span>}\r\n                     align={{\r\n                         offset: [0, 20],\r\n                     }}\r\n                     overlayStyle={{\r\n                         backgroundColor: \"#ffc0cbe0\",\r\n                         color: \"#000\",\r\n                         maxWidth: \"40%\",\r\n                         margin: \"auto\",\r\n                         padding: \"10px\",\r\n                         borderRadius: \"5px\",\r\n                         maxHeight: \"100px\",\r\n                         overflow: \"auto\",\r\n                         boxShadow: \"0px 4px 3px #c571b76b\"\r\n                     }}\r\n                     overlayClassName={\"custom-tooltip\"}\r\n            >\r\n                <Item className={\"top-product__item\"}\r\n                      style={{backgroundImage: `url(${image})`}}\r\n                >\r\n                    <p>{title}</p>\r\n                </Item>\r\n            </Tooltip>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default TopProductItem;\r\n","import React, {memo, useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {getAllCategoriesMeals} from \"../../api/recipies-api\";\r\nimport TopProductItem from \"./TopProductItem\";\r\n\r\nconst ProductItemsWrapper = styled('div')`\r\n    padding: 20px 0px;\r\n    padding-bottom: 10px;\r\n    // display: flex;\r\n    // flex-flow: row nowrap;\r\n    // justify-content: space-between;\r\n    overflow-x: auto;\r\n\twhite-space: nowrap;\r\n\t-ms-overflow-style: none;  /* IE and Edge */\r\n    scrollbar-width: none;  /* Firefox */\r\n    max-width: 90%;\r\n    margin: auto;\r\n\t\r\n\t&::-webkit-scrollbar{\r\n\t   background: transparent;\t  \r\n\t}\t\t\r\n`;\r\n\r\nconst TopProductItemsWrapper = () => {\r\n    const [categoriesList, setCategoriesList] = useState([]);\r\n    let meals = categoriesList.length > 0 ? Object.values(categoriesList)[0] : null;\r\n\r\n    useEffect(() => {\r\n        if(categoriesList.length === 0){\r\n            //each time call API for getting All Meals Categories\r\n            getAllCategoriesMeals().then((meal) => setCategoriesList([meal]));\r\n        }\r\n    },[categoriesList.length]);\r\n\r\n    console.log(categoriesList);\r\n\r\n    return(\r\n        <ProductItemsWrapper className={'top-products__item'}>\r\n            {categoriesList.length > 0 && meals.categories.map((item, index) => <TopProductItem key={index} product={item}/>)}\r\n        </ProductItemsWrapper>\r\n    );\r\n};\r\n\r\nexport default memo(TopProductItemsWrapper);","import React, {useContext, useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {AiOutlineHeart} from 'react-icons/ai';\r\nimport {GiHeartWings} from 'react-icons/gi';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FAVORITES, SINGLE_RECIPIE_PATH} from \"../api/config\";\r\nimport {AppContext, getProductFromLocalStorage} from \"../api/context\";\r\n\r\n\r\nconst ProductItem = styled('div')`  \r\n    max-width: 45%;\r\n    flex-basis: 50%;\r\n    align-self: flex-end;\r\n    margin: 10px;\r\n    color:#000;\r\n    text-decoration: none;\r\n    position: relative;    \r\n    \r\n    & .image-holder{\r\n        overflow: hidden;\r\n        border-radius: 10px;\r\n        max-width: 330px;\r\n        margin: auto;\r\n    }\r\n    \r\n    & .content-product__item-image{\r\n        max-width:330px;\r\n        height: 200px;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        border-radius: 10px;\r\n        margin: auto;\r\n        overflow: hidden;\r\n        transition: all 0.3s ease-in-out;\r\n        box-shadow: 0px 5px 7px #c571b76b;\r\n        position: relative;\r\n        \r\n        &:hover{\r\n            transform: scale(1.1);\r\n            transition: all 0.5s ease-in-out;\r\n        }      \r\n    }\r\n    & .product-item__image-panel{\r\n        position: absolute;\r\n        background-color: #f8e3f0e3;\r\n        max-width: 330px;\r\n        left: 0;\r\n        right: 0;\r\n        margin: auto;\r\n        bottom: 0;\r\n        width: 100%;\r\n        padding: 5px 0px;\r\n        text-align: right;\r\n        border-bottom-left-radius: 10px;\r\n        border-bottom-right-radius: 10px;            \r\n             \r\n          & svg{              \r\n            padding-right: 15px;\r\n            color: #f17979;\r\n            cursor: pointer;\r\n            font-size: 18px;\r\n                \r\n            &:hover{\r\n              transform: scale(1.3);\r\n              transition: all 0.5s ease-in-out;\r\n            }\r\n         }\r\n    }\r\n    \r\n     @media (max-width: 767px){\r\n        max-width: 330px;\r\n        margin: auto;\r\n        flex-basis: 100%;\r\n        align-self: auto;       \r\n    }\r\n`;\r\n\r\nconst ContentProductItem = ({product}) => {\r\n    const context = useContext(AppContext);\r\n    const [favoritesMealsId, setFavoritesMealsId] = useState([]);\r\n    const [favoriteMeal, setFavoriteMeal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if(favoritesMealsId.includes(product.idMeal) || getProductFromLocalStorage(FAVORITES)?.some((item) => item.idMeal === product.idMeal)){\r\n            setFavoriteMeal(true);\r\n        }else{\r\n            setFavoriteMeal(false);\r\n        }\r\n    },[favoritesMealsId, product]);\r\n\r\n\r\n    const {image = product.strMealThumb,\r\n           title = product.strMeal,\r\n           id = product.idMeal,\r\n    } = product;\r\n    //console.log(product);\r\n\r\n    return(\r\n          <ProductItem className={\"content-product__item\"}>\r\n              <NavLink to={{\r\n                  pathname: SINGLE_RECIPIE_PATH + id\r\n              }}>\r\n                  <h3>{title}</h3>\r\n                  <div className=\"image-holder\">\r\n                      <div className=\"content-product__item-image\" style={{backgroundImage: `url(${image})`}}></div>\r\n                  </div>\r\n              </NavLink>\r\n              <div className=\"product-item__image-panel\">\r\n                  {favoriteMeal ?\r\n                      <GiHeartWings/>\r\n                      :\r\n                      <AiOutlineHeart\r\n                          onClick={() => setFavoritesMealsId([...context.onSendProductToFavorites(product)])}/>\r\n                  }\r\n              </div>\r\n          </ProductItem>\r\n    );\r\n};\r\n\r\nexport default ContentProductItem;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport ContentProductItem from \"./ContentProductItem\";\r\n\r\n\r\n\r\nconst ProductItemsWrapper = styled('div')`\r\n    padding: 20px;\r\n    \r\n    & h3{\r\n       text-transform: capitalize;    \r\n    }  \r\n    \r\n    & .content-products__item{\r\n        display: flex;\r\n        flex-flow: row wrap;\r\n        // overflow: hidden;\r\n    }   \r\n    \r\n    & a{       \r\n        color:#000;\r\n        text-decoration: none;        \r\n    }  \r\n    \r\n    @media (max-width: 767px){\r\n        flex-flow: column nowrap;       \r\n    }\r\n`;\r\n\r\nconst ContentProductItemsWrapper = ({meals, showCategoryTitle, categoryTitle}) => {\r\n    const mealsArr = [];\r\n    meals.forEach((item) => item.meals ? mealsArr.push(...item.meals) : mealsArr.push(item));\r\n    let title =  showCategoryTitle ? categoryTitle + \":\" : \"Top Recipies: \";\r\n    //console.log(mealsArr, meals);\r\n    return(\r\n\r\n        <ProductItemsWrapper>\r\n            <h3>{mealsArr.length > 0 ? title : \"No Results...\"}</h3>\r\n            <div className=\"content-products__item\">\r\n                {mealsArr.map((item, index) => {\r\n                    return <ContentProductItem product={item} key={index}/>\r\n                })}\r\n            </div>\r\n        </ProductItemsWrapper>\r\n    );\r\n};\r\n\r\nexport default ContentProductItemsWrapper;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ContentWrapper = styled('div')`\r\n    padding: 0px 15px;\r\n    margin-bottom: 20px;\r\n    & p{\r\n        text-align: justify;\r\n    }\r\n`;\r\n\r\nconst ContentText = ({text}) => {\r\n    return(\r\n        <ContentWrapper>\r\n            <p>{text}</p>\r\n        </ContentWrapper>\r\n    );\r\n};\r\n\r\nexport default ContentText;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router\";\r\nimport {getMealById} from \"../api/recipies-api\";\r\nimport styled from 'styled-components';\r\nimport {AppContext, getProductFromLocalStorage} from \"../api/context\";\r\nimport ContentText from \"./ContentText\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {GiHeartWings} from \"react-icons/gi\";\r\nimport {AiOutlineHeart} from \"react-icons/ai\";\r\nimport {FAVORITES} from \"../api/config\";\r\n\r\n\r\n\r\nconst SingleProductWrapper = styled('div')`\r\n    & .product_options{\r\n        padding: 0px 15px;\r\n        display: flex; \r\n        position: relative;    \r\n        \r\n        & .product_category{\r\n            position: absolute;\r\n            background-color: antiquewhite;\r\n            padding: 5px 10px;\r\n            top: 10px;\r\n            border-top-right-radius: 2px;\r\n            border-bottom-right-radius: 2px;\r\n            cursor: pointer;\r\n            \r\n            &:hover{\r\n                color: #cdc0ff;\r\n            }\r\n        }\r\n        \r\n        & .product-item__image-panel{\r\n                position: absolute;\r\n                background-color: #f8e3f0e3;\r\n                left: 0;              \r\n                margin: auto;\r\n                bottom: 20px;\r\n                width: 100%;\r\n                max-width: 50%;\r\n                padding: 5px 0px;\r\n                text-align: right;\r\n                border-bottom-left-radius: 5px;\r\n                border-bottom-right-radius: 5px;            \r\n                 \r\n              & svg{              \r\n                padding-right: 15px;\r\n                color: #f17979;\r\n                cursor: pointer;\r\n                font-size: 18px;\r\n                    \r\n                &:hover{\r\n                  transform: scale(1.3);\r\n                  transition: all 0.5s ease-in-out;\r\n                }\r\n             }\r\n        }   \r\n    }\r\n    & img{\r\n        width: 100%;\r\n        max-width: 50%;\r\n        margin-bottom: 20px;\r\n        border-radius: 5px;\r\n    }\r\n    & ol{\r\n        margin: 0;\r\n        & p{\r\n            margin: 0;\r\n            font-weight: 600;\r\n        }\r\n        & li{       \r\n            text-align: left;\r\n            text-transform: capitalize;\r\n        }\r\n    }\r\n   \r\n   @media (max-width: 767px){\r\n      .product_options{\r\n         flex-direction: column;\r\n         \r\n         & img{\r\n            max-width: 100%;\r\n         }\r\n         \r\n         & .product-item__image-panel{\r\n            position: relative;\r\n            max-width: 100%;\r\n            bottom: 50px;\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nconst SingleProductContent = () => {\r\n    const [currMeal, setCurrMeal] = useState({});\r\n    const [parsedData, setParsedData] = useState({});\r\n    const [favoritesMealsId, setFavoritesMealsId] = useState([]);\r\n    const [favoriteMeal, setFavoriteMeal] = useState(false);\r\n    let mealId = useHistory().location.pathname.split(\"/\")[2];\r\n    let context = useContext(AppContext);\r\n\r\n    //Check if has mealId\r\n    useEffect(() => {\r\n        if(mealId){\r\n            getMealById(mealId)\r\n            .then((response) => setCurrMeal(response.meals));\r\n        }\r\n\r\n    }, [mealId]);\r\n\r\n    //check if currMeal is not empty\r\n    useEffect(() => {\r\n        if(Object.entries(currMeal).length > 0){\r\n            setParsedData(context.parseSingleMealData(currMeal));\r\n        }\r\n    },[Object.entries(currMeal).length]);\r\n\r\n    //check if favorite Meal is unique\r\n    useEffect(() => {\r\n        if(favoritesMealsId.includes(mealId) || getProductFromLocalStorage(FAVORITES)?.some((item) => item.idMeal === mealId)){\r\n            setFavoriteMeal(true);\r\n        }else{\r\n            setFavoriteMeal(false);\r\n        }\r\n    },[favoritesMealsId, mealId]);\r\n\r\n    //console.log(currMeal, parsedData, favoriteMeal);\r\n    return(\r\n        <SingleProductWrapper>\r\n            { Object.entries(parsedData).length > 0 &&\r\n                <>\r\n                    <h2>{parsedData.mealTitle}</h2>\r\n                    <div className=\"product_options\">\r\n                        <img src={parsedData.mealImage} alt=\"\"/>\r\n                        <div className=\"product-item__image-panel\">\r\n                            {favoriteMeal ?\r\n                                <GiHeartWings/>\r\n                                :\r\n                                <AiOutlineHeart\r\n                                    onClick={() => setFavoritesMealsId([...context.onSendProductToFavorites(...currMeal)])}/>\r\n                            }\r\n                        </div>\r\n                        <NavLink className={\"product_category\"}\r\n                                 onClick={() => context.getCategoryList(parsedData.categoryMeal)}\r\n                                 to={{\r\n                                     pathname: \"/\"\r\n                                 }}\r\n                        >\r\n                            {parsedData.categoryMeal}\r\n                        </NavLink>\r\n                        <ol className=\"engridients\">\r\n                            <p>Engridients: </p>\r\n                            {parsedData.ingredients.map((item, index) => {\r\n                                return <li key={index}>{item}</li>\r\n                            })}\r\n                        </ol>\r\n                    </div>\r\n                    <h3>How to do it?!...</h3>\r\n                    <ContentText text={parsedData.instructions}/>\r\n                </>}\r\n        </SingleProductWrapper>\r\n    );\r\n}\r\n\r\nexport default SingleProductContent;","import './App.css';\r\nimport Header from \"./components/Header\";\r\nimport TopProductItemsWrapper from \"./components/top-components/TopProductItemsWrapper\";\r\nimport {\r\n    AppContext,\r\n    getProductFromLocalStorage,\r\n    onSendProductToFavorites,\r\n    parseSingleMealData\r\n} from \"./api/context\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ContentProductItemsWrapper from \"./components/ContentProductItemsWrapper\";\r\nimport {\r\n    getCategoryMealsListByCategoryName,\r\n    getMealByRandom,\r\n    searchMealsByName\r\n} from \"./api/recipies-api\";\r\nimport SingleProductContent from \"./components/SingleProductContent\";\r\nimport {FAVORITES, RECIPIE_CATEGORY_PATH, SINGLE_RECIPIE_PATH} from \"./api/config\";\r\nimport {Route, useHistory, withRouter} from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const [mealsListBySearch, setMealsListBySearch] = useState([]);\r\n  const [mealsListByDefault, setMealsListByDefault] = useState([]);\r\n  const [showCategoryProducts, setShowCategoryProducts] = useState({category: '', status: false});\r\n\r\n  useEffect(() => {\r\n      //Fill list of Default meal if mealsListBySearch is empty\r\n      if(mealsListByDefault.length < 5 && mealsListBySearch.length === 0){\r\n          getMealByRandom().then((meal) => setMealsListByDefault([...mealsListByDefault, meal])) ;\r\n      }\r\n  },[mealsListByDefault, mealsListBySearch]);\r\n    //console.log(useHistory())\r\n\r\n    //get MealsList By Search\r\n    const getMealsBySearch = (recipeName) => {\r\n        searchMealsByName(recipeName)\r\n        .then((meals) => {\r\n            setMealsListBySearch([meals]);\r\n            setShowCategoryProducts({category: recipeName, status: true});\r\n        });\r\n    };\r\n\r\n   //get Category MealsList\r\n  const getCategoryList = (categoryName) => {\r\n      getCategoryMealsListByCategoryName(categoryName)\r\n      .then((meal) => {\r\n          setMealsListBySearch([meal]);\r\n          setShowCategoryProducts({category: categoryName, status: true});\r\n      });\r\n  };\r\n\r\n    //get Favorites Meals\r\n   const getFavoritesMealsList = () => {\r\n       setMealsListBySearch([...getProductFromLocalStorage(FAVORITES)]);\r\n       setShowCategoryProducts({category: \"Favorites Meals\", status: true});\r\n   }\r\n    //console.log(mealsListBySearch);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <AppContext.Provider\r\n            value={{getMealsBySearch,\r\n                    getFavoritesMealsList,\r\n                    setMealsListByDefault,\r\n                    parseSingleMealData,\r\n                    getCategoryList,\r\n                    onSendProductToFavorites,\r\n            }}\r\n        >\r\n            <Header/>\r\n            {/*{Show meals by categories}*/}\r\n            <TopProductItemsWrapper />\r\n            {/*//Show by default ContentProductItemsWrapper with a list of the products*/}\r\n            <Route exact path=\"/\" render={() => <ContentProductItemsWrapper\r\n                                                meals={mealsListBySearch.length > 0 ? mealsListBySearch : mealsListByDefault}\r\n                                                showCategoryTitle={showCategoryProducts.status}\r\n                                                categoryTitle={showCategoryProducts.category}\r\n            />}/>\r\n            <Route exact path={`${RECIPIE_CATEGORY_PATH}:name`} render={() => <ContentProductItemsWrapper\r\n                                                                meals={mealsListBySearch}\r\n                                                                showCategoryTitle={showCategoryProducts.status}\r\n                                                                categoryTitle={showCategoryProducts.category}\r\n            />}/>\r\n            <Route exact path={`${SINGLE_RECIPIE_PATH}:id`} component={SingleProductContent}/>\r\n        </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}