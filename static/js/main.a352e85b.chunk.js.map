{"version":3,"sources":["api/config.ts","api/context.ts","components/SearchInput.tsx","components/Header.tsx","api/recipies-api.ts","components/top-components/TopProductItem.tsx","components/top-components/TopProductItemsWrapper.tsx","components/ContentProductItem.tsx","components/shared-components/Loader.tsx","components/ContentProductItemsWrapper.tsx","components/ContentText.tsx","components/SingleProductContent.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["BASE_API_URL","SEARCH_MEALS_BY_NAME","GET_MEAL_BY_RANDOM","GET_MEAL_BY_ID","GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME","GET_ALL_CATEGORIES_MEALS_LIST","SINGLE_RECIPIE_PATH","RECIPIE_CATEGORY_PATH","RECIPIE_FAVOURITE_PATH","FAVORITES","parseSingleMealData","singleMealData","mealTitle","strMeal","mealImage","strMealThumb","instructions","strInstructions","categoryMeal","strCategory","ingredients","elem","includes","push","onSendProductToFavorites","product","setProductToLocalStorage","JSON","stringify","getProductFromLocalStorage","onRemoveProductFromFavorites","updatedArray","filter","item","idMeal","value","localStorage","setItem","key","parse","getItem","initialValue","AppContext","React","createContext","SearchWrapper","styled","SearchInputWrapper","SubmitInput","SearchInput","useState","searchValue","setSearchValue","context","useContext","className","type","placeholder","onChange","e","target","to","pathname","onClick","getMealsBySearch","HeaderWrapper","Header","getFavoritesMealsList","searchMealsByName","a","fetch","response","json","console","error","message","getMealByRandom","getMealById","mealId","getCategoryMealsListByCategoryName","categoryName","getAllCategoriesMeals","Item","TopProductItem","title","image","strCategoryThumb","description","strCategoryDescription","getCategoryList","placement","trigger","mouseEnterDelay","mouseLeaveDelay","destroyTooltipOnHide","overlay","align","offset","overlayStyle","backgroundColor","color","maxWidth","margin","padding","borderRadius","maxHeight","overflow","boxShadow","overlayClassName","style","backgroundImage","ProductItemsWrapper","TopProductItemsWrapper","categoriesList","setCategoriesList","meals","Object","values","flat","useEffect","then","meal","map","index","memo","ProductItem","ContentProductItem","isFavorite","setIsFavoriteMeal","some","id","Loader","xmlns","xmlnsXlink","version","width","height","viewBox","xmlSpace","xlinkHref","cx","cy","r","fill","transform","attributeName","calcMode","dur","repeatCount","ContentProductItemsWrapper","showCategoryTitle","categoryTitle","mealsArr","ContentWrapper","ContentText","text","SingleProductWrapper","initialParsedDataState","SingleProductContent","currMeal","setCurrMeal","parsedData","setParsedData","isFavoriteMeal","useHistory","location","split","currentMeal","src","alt","withRouter","mealsListBySearch","setMealsListBySearch","mealsListByDefault","setMealsListByDefault","category","status","showCategoryProducts","setShowCategoryProducts","matchedRoute","matchPath","path","length","slice","Provider","recipeName","exact","render","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a352e85b.chunk.js","sourcesContent":["const BASE_API_URL = 'https://www.themealdb.com/api/json/v1/1';\r\n\r\nexport const SEARCH_MEALS_BY_NAME = `${BASE_API_URL}/search.php?s=`;\r\nexport const GET_MEAL_BY_RANDOM = `${BASE_API_URL}/random.php`;\r\nexport const GET_MEAL_BY_ID = `${BASE_API_URL}/lookup.php?i=`;\r\nexport const GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME = `${BASE_API_URL}/filter.php?c=`;\r\nexport const GET_ALL_CATEGORIES_MEALS_LIST = `${BASE_API_URL}/categories.php`;\r\n\r\n//Base URL\r\nexport const PRODUCTION_URL = 'https://shevchenko1983.github.io/React-Recipies-App';\r\n\r\n//App Routing\r\nexport const SINGLE_RECIPIE_PATH = '/recipie/';\r\nexport const RECIPIE_CATEGORY_PATH = \"/category/\";\r\nexport const RECIPIE_FAVOURITE_PATH = \"/favourite\";\r\n\r\n//Keys in LocalStorage\r\nexport const FAVORITES = 'favoriteMeals';\r\n","import React from 'react';\r\nimport {FAVORITES} from \"./config\";\r\n\r\nexport interface SingleMealT {\r\n    [key: string] : string | null\r\n}\r\n\r\nexport interface ParseSingleMealDataT {\r\n    mealTitle: string | null,\r\n    mealImage: string | null,\r\n    instructions: string | null,\r\n    ingredients: Array<string | null>,\r\n    categoryMeal: string | null,\r\n}\r\n\r\nexport interface ContextT {\r\n    parseSingleMealData: (singleMealData: SingleMealT) => ParseSingleMealDataT | null,\r\n    onSendProductToFavorites: (product: SingleMealT) => boolean,\r\n    onRemoveProductFromFavorites: (product: SingleMealT) => boolean,\r\n    getProductFromLocalStorage?: (key: string) => string | null,\r\n    getFavoritesMealsList: () => void,\r\n    getMealsBySearch: (recipeName: string | null) => void,\r\n    setMealsListByDefault: (prevState: SingleMealT[]) => void,\r\n    getCategoryList: (categoryName: string | null) => void\r\n}\r\n\r\n//Parse data  SingleMeal\r\nexport const parseSingleMealData = (singleMealData: SingleMealT) => {\r\n    if(!singleMealData) {\r\n        return null;\r\n    }\r\n\r\n    let {mealTitle = singleMealData.strMeal,\r\n        mealImage = singleMealData.strMealThumb,\r\n        instructions = singleMealData.strInstructions,\r\n        categoryMeal = singleMealData.strCategory,\r\n    } = singleMealData;\r\n\r\n    //get ingredients List if they aren't empty\r\n    const ingredients = [];\r\n    for(let elem in singleMealData){\r\n        if(elem.includes(\"strIngredient\") && singleMealData[elem]){\r\n            ingredients.push(singleMealData[elem]);\r\n        }\r\n    }\r\n\r\n    return {\r\n        mealTitle,\r\n        mealImage,\r\n        instructions,\r\n        ingredients,\r\n        categoryMeal\r\n    }\r\n};\r\n\r\nexport const onSendProductToFavorites = (product: SingleMealT) => {\r\n    if(!product) {\r\n        return false;\r\n    }\r\n    //get all values from LocalStorage and put new product to these values, and push it back to LocalStorage\r\n    setProductToLocalStorage(JSON.stringify([...getProductFromLocalStorage(FAVORITES), product]));\r\n    return true;\r\n};\r\n\r\nexport const onRemoveProductFromFavorites = (product: SingleMealT) => {\r\n    if(!product) {\r\n        return false;\r\n    }\r\n    //get all values from LocalStorage and remove current product from values, and push it back to LocalStorage\r\n    const updatedArray = getProductFromLocalStorage(FAVORITES).filter((item: SingleMealT) => item.idMeal !== product.idMeal);\r\n    setProductToLocalStorage(JSON.stringify([...updatedArray]));\r\n    return true;\r\n};\r\n\r\nconst setProductToLocalStorage = (value: string) => {\r\n    if(!value) {\r\n        return;\r\n    }\r\n    localStorage.setItem(FAVORITES, value);\r\n}\r\n\r\nexport const getProductFromLocalStorage = (key: typeof FAVORITES) => {\r\n    if(!key) {\r\n        return null;\r\n    }\r\n    return JSON.parse(localStorage.getItem(key) as typeof FAVORITES) ?? [];\r\n}\r\n\r\n//Create AppContext for using via UseContext Hooks inside application\r\nconst initialValue = {} as ContextT;\r\nexport const AppContext = React.createContext<ContextT>(initialValue);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport {useContext, useState} from \"react\";\r\nimport {BiSearchAlt2} from 'react-icons/bi';\r\nimport {AppContext} from \"../api/context\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst SearchWrapper = styled('div')`\r\n     display: inline-block;\r\n     width: 330px;\r\n     maxWidth: 50%;\r\n     position: relative;\r\n     text-align: left;\r\n     border-top-right-radius: 5px;\r\n     border-bottom-right-radius: 5px;\r\n     overflow: hidden;\r\n     \r\n     @media (max-width: 660px){\r\n        max-width: 80%;\r\n     }\r\n`;\r\n\r\nconst SearchInputWrapper = styled('input')`\r\n    padding: 5px 15px;\r\n    color: #3f3f3f;\r\n    background-color: #ffc0cb82;\r\n    width: 100%;\r\n    max-width: 330px;\r\n    margin: auto;\r\n    border: none;\r\n    border-radius: 5px;    \r\n    overflow: hidden;\r\n    \r\n    &:focus{\r\n       outline:none;\r\n       box-shadow: 0 5px 6px #c571b76b;\r\n    }\r\n`;\r\n\r\nconst SubmitInput = styled('div')`   \r\n    color: #3f3f3f;\r\n    background-color: #fff;\r\n    width: 50px;\r\n    margin: auto;\r\n    border: none;\r\n    border-radius: 5px;\r\n    height: 26px;\r\n    display: inline-block;\r\n    right: 0px;\r\n    top: 0px;\r\n    position: absolute;\r\n    border-top-left-radius: 0;\r\n    border-bottom-left-radius: 0;\r\n    cursor: pointer;\r\n    text-align: center;\r\n    \r\n    &:hover{\r\n      background-color: #f4f2f2;\r\n    }\r\n    \r\n    & svg{\r\n        position: relative;\r\n        top: 4px;\r\n        color: #3f3f3fa1;\r\n        width: 50px;\r\n        height: 20px;\r\n    }\r\n    \r\n    &:focus{\r\n        outline:none;\r\n        box-shadow: 0 5px 6px #c571b76b;\r\n    }\r\n`;\r\n\r\nconst SearchInput = () => {\r\n    const [searchValue, setSearchValue] = useState(\"\");\r\n    const context = useContext(AppContext);\r\n\r\n    const onChangeInput = (value: string) => {\r\n        setSearchValue(value)\r\n    }\r\n\r\n    const getMealsBySearch = () => {\r\n        if(!searchValue){\r\n            return;\r\n        }\r\n        context.getMealsBySearch(searchValue);\r\n    }\r\n\r\n    return(\r\n        <SearchWrapper className={\"search\"}>\r\n            <SearchInputWrapper\r\n                type={\"text\"}\r\n                placeholder={\"Search some recipie...\"}\r\n                value={searchValue}\r\n                onChange={(e) => onChangeInput(e.target.value)}\r\n            />\r\n            <SubmitInput>\r\n                <NavLink to={{pathname: \"/\"}}>\r\n                    <BiSearchAlt2 data-testid=\"search-button\" onClick={getMealsBySearch}/>\r\n                </NavLink>\r\n            </SubmitInput>\r\n        </SearchWrapper>\r\n    );\r\n};\r\n\r\nexport default SearchInput;","import React, {useContext} from 'react';\r\nimport styled from 'styled-components';\r\nimport SearchInput from \"./SearchInput\";\r\nimport {RiUserStarFill} from 'react-icons/ri';\r\nimport {AppContext} from \"../api/context\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {RECIPIE_FAVOURITE_PATH} from \"../api/config\";\r\n\r\nconst HeaderWrapper = styled('div')`\r\n    padding: 10px 20px;\r\n    border-bottom: 2px solid #cfa4bf;\r\n    box-shadow: 0px 5px 7px #c571b76b;\r\n    margin-bottom: 25px;\r\n    \r\n    & svg.favorite-icon{\r\n        font-size: 25px;\r\n        margin-left: 30px;\r\n        cursor: pointer;\r\n        \r\n        &:hover{\r\n            color: #f69400;\r\n        }\r\n    }  \r\n  \r\n`;\r\n\r\nconst Header = () => {\r\n    const context = useContext(AppContext);\r\n    return(\r\n        <HeaderWrapper className={\"header\"}>\r\n            <SearchInput/>\r\n            <NavLink to={{pathname: RECIPIE_FAVOURITE_PATH}} data-testid=\"favorite-meals-link\" onClick={context.getFavoritesMealsList}>\r\n               <RiUserStarFill className={\"favorite-icon\"} />\r\n            </NavLink>\r\n        </HeaderWrapper>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n\r\n","import {\r\n    GET_ALL_CATEGORIES_MEALS_LIST,\r\n    GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME,\r\n    GET_MEAL_BY_ID,\r\n    GET_MEAL_BY_RANDOM,\r\n    SEARCH_MEALS_BY_NAME\r\n} from \"./config\";\r\n\r\n//get Meal be searching\r\nexport const searchMealsByName = async (searchValue: string) => {\r\n    try{\r\n        const response = await fetch(SEARCH_MEALS_BY_NAME + searchValue);\r\n        return await response.json();\r\n    }catch (e: any) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get Meal By Random\r\nexport const getMealByRandom = async () => {\r\n    try{\r\n        const response = await fetch(GET_MEAL_BY_RANDOM);\r\n        return await response.json();\r\n    }catch (e: any) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get Meal By Id\r\nexport const getMealById = async (mealId: string) => {\r\n    try{\r\n        const response = await fetch(GET_MEAL_BY_ID + mealId);\r\n        return await response.json();\r\n    }catch (e: any) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get Category Meals List By Category Name\r\nexport const getCategoryMealsListByCategoryName = async (categoryName: string) => {\r\n    try{\r\n        const response = await fetch(GET_CATEGORY_MEALS_LIST_BY_CATEGORY_NAME + categoryName);\r\n        return await response.json();\r\n    }catch (e: any) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n\r\n//get ALL Categories Meals List\r\nexport const getAllCategoriesMeals = async () => {\r\n    try{\r\n        const response = await fetch(GET_ALL_CATEGORIES_MEALS_LIST);\r\n        return await response.json();\r\n    }catch (e: any) {\r\n        console.error(e.message);\r\n    }\r\n}\r\n","import React, {useContext} from 'react';\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {AppContext, SingleMealT} from \"../../api/context\";\r\nimport Tooltip from \"rc-tooltip/lib/Tooltip\";\r\nimport {RECIPIE_CATEGORY_PATH} from \"../../api/config\";\r\n\r\ntype ProductItemT = {\r\n    product: SingleMealT\r\n}\r\n\r\nconst Item = styled('div')`\r\n    width: 75px;\r\n    height: 75px;\r\n    border-radius: 50%;\r\n    border:3px solid #ffc0cb82;\r\n    background-size: 170%;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    box-shadow: 0px 4px 3px #c571b76b;\r\n    margin: 0px 12px;\r\n    position: relative;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n \r\n    & p{\r\n        position: relative;\r\n        top: -42px;\r\n        left: 0;\r\n        right: 0;\r\n        text-decoration: none;\r\n    }\r\n    & a{\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n`;\r\n\r\nconst TopProductItem = ({product}: ProductItemT) => {\r\n    const context = useContext(AppContext);\r\n\r\n    if(!product){\r\n        return <div/>\r\n    }\r\n\r\n    const {\r\n         title = product.strCategory,\r\n         image = product.strCategoryThumb,\r\n         description = product.strCategoryDescription\r\n    } = product;\r\n\r\n    return(\r\n        <NavLink to={{pathname: RECIPIE_CATEGORY_PATH + title}} onClick={() => context.getCategoryList(title)}>\r\n            <Tooltip placement=\"bottom\"\r\n                     trigger={['hover']}\r\n                     mouseEnterDelay={0.3}\r\n                     mouseLeaveDelay={0.2}\r\n                     destroyTooltipOnHide={true}\r\n                     overlay={<span>{description}</span>}\r\n                     align={{\r\n                         offset: [0, 20],\r\n                     }}\r\n                     overlayStyle={{\r\n                         backgroundColor: \"#ffc0cbe0\",\r\n                         color: \"#000\",\r\n                         maxWidth: \"40%\",\r\n                         margin: \"auto\",\r\n                         padding: \"10px\",\r\n                         borderRadius: \"5px\",\r\n                         maxHeight: \"100px\",\r\n                         overflow: \"auto\",\r\n                         boxShadow: \"0px 4px 3px #c571b76b\"\r\n                     }}\r\n                     overlayClassName=\"custom-tooltip\"\r\n            >\r\n                <Item className=\"top-product__item\"\r\n                      style={{backgroundImage: `url(${image})`}}\r\n                >\r\n                    <p>{title}</p>\r\n                </Item>\r\n            </Tooltip>\r\n        </NavLink>\r\n    );\r\n};\r\n\r\nexport default TopProductItem;\r\n","import React, {memo, useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {getAllCategoriesMeals} from \"../../api/recipies-api\";\r\nimport TopProductItem from \"./TopProductItem\";\r\nimport {SingleMealT} from \"../../api/context\";\r\n\r\nconst ProductItemsWrapper = styled('div')`\r\n    padding: 20px 0px;\r\n    padding-bottom: 10px;\r\n    overflow-x: auto;\r\n\twhite-space: nowrap;\r\n\t-ms-overflow-style: none;  /* IE and Edge */\r\n    scrollbar-width: none;  /* Firefox */\r\n    max-width: 90%;\r\n    margin: auto;\r\n\t\r\n\t&::-webkit-scrollbar{\r\n\t   background: transparent;\t  \r\n\t}\t\t\r\n`;\r\n\r\nconst TopProductItemsWrapper = () => {\r\n    const [categoriesList, setCategoriesList] = useState<Array<SingleMealT>>([]);\r\n    const meals = Object.values(categoriesList).flat() ?? [];\r\n\r\n    useEffect(() => {\r\n        //each time call API for getting All Meals Categories\r\n        getAllCategoriesMeals().then((meal) => setCategoriesList(meal));\r\n    },[]);\r\n\r\n    return(\r\n        <ProductItemsWrapper className={'top-products__item'}>\r\n            {meals.map((item: SingleMealT, index: number) => <TopProductItem key={index} product={item}/>)}\r\n        </ProductItemsWrapper>\r\n    );\r\n};\r\n\r\nexport default memo(TopProductItemsWrapper);\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport styled from 'styled-components';\r\nimport {AiOutlineHeart} from 'react-icons/ai';\r\nimport {GiHeartWings} from 'react-icons/gi';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {FAVORITES, SINGLE_RECIPIE_PATH} from \"../api/config\";\r\nimport {AppContext, getProductFromLocalStorage, SingleMealT} from \"../api/context\";\r\n\r\ntype ProductT = {\r\n    product: SingleMealT\r\n}\r\n\r\nconst ProductItem = styled('div')`  \r\n    max-width: 45%;\r\n    flex-basis: 50%;\r\n    align-self: flex-end;\r\n    margin: 10px;\r\n    color:#000;\r\n    text-decoration: none;\r\n    position: relative;    \r\n    \r\n    & .image-holder{\r\n        overflow: hidden;\r\n        border-radius: 10px;\r\n        max-width: 330px;\r\n        margin: auto;\r\n    }\r\n    \r\n    & .content-product__item-image{\r\n        max-width:330px;\r\n        height: 200px;\r\n        background-size: cover;\r\n        background-repeat: no-repeat;\r\n        background-position: center;\r\n        border-radius: 10px;\r\n        margin: auto;\r\n        overflow: hidden;\r\n        transition: all 0.3s ease-in-out;\r\n        box-shadow: 0px 5px 7px #c571b76b;\r\n        position: relative;\r\n        \r\n        &:hover{\r\n            transform: scale(1.1);\r\n            transition: all 0.5s ease-in-out;\r\n        }      \r\n    }\r\n    \r\n    & .product-item__image-panel{\r\n        position: absolute;\r\n        background-color: #f8e3f0e3;\r\n        max-width: 330px;\r\n        left: 0;\r\n        right: 0;\r\n        margin: auto;\r\n        bottom: 0;\r\n        width: 100%;\r\n        padding: 5px 0px;\r\n        text-align: right;\r\n        border-bottom-left-radius: 10px;\r\n        border-bottom-right-radius: 10px;            \r\n             \r\n          & svg{              \r\n            padding-right: 15px;\r\n            color: #f17979;\r\n            cursor: pointer;\r\n            font-size: 18px;\r\n                \r\n            &:hover{\r\n              transform: scale(1.3);\r\n              transition: all 0.5s ease-in-out;\r\n            }\r\n         }\r\n    }\r\n    \r\n     @media (max-width: 767px){\r\n        max-width: 330px;\r\n        margin: auto;\r\n        flex-basis: 100%;\r\n        align-self: auto;       \r\n    }\r\n`;\r\n\r\nconst ContentProductItem = ({product}: ProductT) => {\r\n    const context = useContext(AppContext);\r\n    const [isFavorite, setIsFavoriteMeal] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        if(getProductFromLocalStorage(FAVORITES)?.some((item: SingleMealT) => item.idMeal === product?.idMeal)){\r\n            return setIsFavoriteMeal(true);\r\n        }\r\n        return setIsFavoriteMeal(false);\r\n    }, [product]);\r\n\r\n    if(!product) {\r\n        return <div/>\r\n    }\r\n\r\n    const onRemoveFavoriteMeal = () => {\r\n        context.onRemoveProductFromFavorites(product);\r\n        context.getFavoritesMealsList();\r\n        setIsFavoriteMeal(false);\r\n    }\r\n\r\n    const onAddFavoriteMeal = () => {\r\n        context.onSendProductToFavorites(product);\r\n        setIsFavoriteMeal(true);\r\n    }\r\n\r\n    const {\r\n        image = product.strMealThumb,\r\n        title = product.strMeal,\r\n        id = product.idMeal,\r\n    } = product;\r\n\r\n    return(\r\n          <ProductItem className=\"content-product__item\">\r\n              <NavLink to={{\r\n                  pathname: SINGLE_RECIPIE_PATH + id\r\n              }}>\r\n                  <h3>{title}</h3>\r\n                  <div className=\"image-holder\">\r\n                      <div className=\"content-product__item-image\" style={{backgroundImage: `url(${image})`}}/>\r\n                  </div>\r\n              </NavLink>\r\n              <div className=\"product-item__image-panel\">\r\n                  {isFavorite ?\r\n                      <GiHeartWings\r\n                          data-testid=\"favorite-icon\"\r\n                          onClick={onRemoveFavoriteMeal}\r\n                      />\r\n                      :\r\n                      <AiOutlineHeart\r\n                          data-testid=\"not-favorite-icon\"\r\n                          onClick={onAddFavoriteMeal}\r\n                      />\r\n                  }\r\n              </div>\r\n          </ProductItem>\r\n    );\r\n};\r\n\r\nexport default ContentProductItem;","import React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        // @ts-ignore\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" xmlnsXlink=\"http://www.w3.org/1999/xlink\" version=\"1.0\" width=\"64px\" height=\"64px\" viewBox=\"0 0 128 128\" xmlSpace=\"preserve\"><script type=\"text/ecmascript\" xlinkHref=\"//faviconer.net/jscripts/smil.user.js\"/><g><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#ffade0\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#ffc8ea\" transform=\"rotate(45,64,64)\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#ffddf2\" transform=\"rotate(90,64,64)\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#ffeff9\" transform=\"rotate(135,64,64)\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#fff5fb\" transform=\"rotate(180,64,64)\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#fff5fb\" transform=\"rotate(225,64,64)\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#fff5fb\" transform=\"rotate(270,64,64)\"/><circle cx=\"16\" cy=\"64\" r=\"16\" fill=\"#fff5fb\" transform=\"rotate(315,64,64)\"/><animateTransform attributeName=\"transform\" type=\"rotate\" values=\"0 64 64;315 64 64;270 64 64;225 64 64;180 64 64;135 64 64;90 64 64;45 64 64\" calcMode=\"discrete\" dur=\"1120ms\" repeatCount=\"indefinite\"></animateTransform></g></svg>\r\n    )\r\n}\r\n\r\nexport  default Loader;\r\n","import React  from 'react';\r\nimport styled from 'styled-components';\r\nimport ContentProductItem from \"./ContentProductItem\";\r\nimport Loader from \"./shared-components/Loader\";\r\nimport {SingleMealT} from \"../api/context\";\r\n\r\ntype PropsT = {\r\n    meals: Array<SingleMealT>,\r\n    showCategoryTitle: boolean,\r\n    categoryTitle?: string\r\n}\r\n\r\nconst ProductItemsWrapper = styled('div')`\r\n    padding: 20px;\r\n    \r\n    & h3{\r\n       text-transform: capitalize;    \r\n    }  \r\n    \r\n    & .content-products__item{\r\n       display: flex;\r\n       flex-flow: row wrap;\r\n    }   \r\n    \r\n    & a{       \r\n       color:#000;\r\n       text-decoration: none;        \r\n    }  \r\n    \r\n    @media (max-width: 767px){\r\n       flex-flow: column nowrap;       \r\n    }\r\n`;\r\n\r\nconst ContentProductItemsWrapper = ({meals, showCategoryTitle, categoryTitle}: PropsT) => {\r\n\r\n    if(!meals || !Object.values(meals?.[0] ?? [])?.[0]) {\r\n        // return <h3>No Results...</h3>\r\n        return <div style={{transform: `translateY(250px)`}} data-testid='loader'><Loader /></div>\r\n    }\r\n\r\n    const mealsArr = meals.map((item) => {\r\n       return item.meals ? item.meals : item\r\n    });\r\n\r\n    const title =  showCategoryTitle ? `${categoryTitle}: ` : \"Top Recipies: \";\r\n\r\n    return(\r\n        <ProductItemsWrapper>\r\n            <h3>{title}</h3>\r\n            <div className=\"content-products__item\" data-testid='products-wrapper'>\r\n                {mealsArr.flat().map((item: FlatArray<any, number>, index: number) => {\r\n                    return <ContentProductItem key={index} product={item} />\r\n                }) ?? null}\r\n            </div>\r\n        </ProductItemsWrapper>\r\n    );\r\n};\r\n\r\nexport default ContentProductItemsWrapper;","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ntype PropsT = {\r\n    text: string | null\r\n}\r\n\r\nconst ContentWrapper = styled('div')`\r\n   padding: 0px 15px;\r\n   margin-bottom: 20px;\r\n   & p{\r\n        text-align: justify;\r\n   }\r\n`;\r\n\r\nconst ContentText = ({text}: PropsT) => {\r\n    return(\r\n        <ContentWrapper>\r\n            <p>{text}</p>\r\n        </ContentWrapper>\r\n    );\r\n};\r\n\r\nexport default ContentText;","import React, {useContext, useEffect, useState} from 'react';\r\nimport {useHistory} from \"react-router\";\r\nimport {getMealById} from \"../api/recipies-api\";\r\nimport styled from 'styled-components';\r\nimport {AppContext, getProductFromLocalStorage, ParseSingleMealDataT, SingleMealT} from \"../api/context\";\r\nimport ContentText from \"./ContentText\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {GiHeartWings} from \"react-icons/gi\";\r\nimport Loader from './shared-components/Loader';\r\nimport {AiOutlineHeart} from \"react-icons/ai\";\r\nimport {FAVORITES} from \"../api/config\";\r\n\r\nconst SingleProductWrapper = styled('div')`\r\n    \r\n    & svg {\r\n      transform: translateY(250px);\r\n    }\r\n    \r\n    & .product_options{\r\n        padding: 0px 15px;\r\n        display: flex; \r\n        position: relative;    \r\n        \r\n        & .product_category{\r\n            position: absolute;\r\n            background-color: antiquewhite;\r\n            padding: 5px 10px;\r\n            top: 10px;\r\n            border-top-right-radius: 2px;\r\n            border-bottom-right-radius: 2px;\r\n            cursor: pointer;\r\n            \r\n            &:hover{\r\n                color: #cdc0ff;\r\n            }\r\n        }\r\n        \r\n        & .product-item__image-panel{\r\n                position: absolute;\r\n                background-color: #f8e3f0e3;\r\n                left: 0;              \r\n                margin: auto;\r\n                bottom: 20px;\r\n                width: 100%;\r\n                max-width: 50%;\r\n                padding: 5px 0px;\r\n                text-align: right;\r\n                border-bottom-left-radius: 5px;\r\n                border-bottom-right-radius: 5px;            \r\n                 \r\n              & svg{              \r\n                padding-right: 15px;\r\n                color: #f17979;\r\n                cursor: pointer;\r\n                font-size: 18px;\r\n                transform: translateY(0px);\r\n                    \r\n                &:hover{\r\n                  transform: scale(1.3);\r\n                  transition: all 0.5s ease-in-out;\r\n                }\r\n             }\r\n        }   \r\n    }\r\n    \r\n    & img{\r\n        width: 100%;\r\n        max-width: 50%;\r\n        margin-bottom: 20px;\r\n        border-radius: 5px;\r\n    }\r\n    \r\n    & ol{\r\n        margin: 0;\r\n        & p{\r\n            margin: 0;\r\n            text-align: initial;\r\n            font-weight: 600;\r\n        }\r\n        & li{       \r\n            text-align: left;\r\n            text-transform: capitalize;\r\n        }\r\n    }\r\n   \r\n   @media (max-width: 767px){\r\n      .product_options{\r\n         flex-direction: column;\r\n         \r\n         & img{\r\n            max-width: 100%;\r\n         }\r\n         \r\n         & .product-item__image-panel{\r\n            position: relative;\r\n            max-width: 100%;\r\n            bottom: 50px;\r\n         }\r\n      }\r\n   }\r\n`;\r\n\r\nconst initialParsedDataState = {} as ParseSingleMealDataT;\r\n\r\nconst SingleProductContent = () => {\r\n    const [currMeal, setCurrMeal] = useState<Array<SingleMealT>>([]);\r\n    const [parsedData, setParsedData] = useState<ParseSingleMealDataT | null>(initialParsedDataState);\r\n    const [isFavoriteMeal, setIsFavoriteMeal] = useState<boolean>(false);\r\n    const { location } = useHistory();\r\n    const mealId = location.pathname.split(\"/\")[2];\r\n    const context = useContext(AppContext);\r\n    const [currentMeal] = [...currMeal];\r\n\r\n    //Check if has mealId\r\n    useEffect(() => {\r\n        if(!mealId){\r\n            return;\r\n        }\r\n        getMealById(mealId).then((response) => setCurrMeal(response.meals));\r\n    }, [mealId]);\r\n\r\n    //check if currMeal is not empty\r\n    useEffect(() => {\r\n        if(!currMeal){\r\n            return;\r\n        }\r\n        setParsedData(context.parseSingleMealData(currMeal[0]));\r\n    },[context, currMeal]);\r\n\r\n    //check if favorite Meal is unique\r\n    useEffect(() => {\r\n        if(getProductFromLocalStorage(FAVORITES)?.some((item: SingleMealT) => item.idMeal === mealId)){\r\n            return setIsFavoriteMeal(true);\r\n        }\r\n        return setIsFavoriteMeal(false);\r\n    },[mealId]);\r\n\r\n    if(!parsedData) {\r\n        return <div/>\r\n    }\r\n\r\n    const onRemoveFavoriteMeal = () => {\r\n        context.onRemoveProductFromFavorites(currentMeal);\r\n        setIsFavoriteMeal(false);\r\n    }\r\n\r\n    const onAddFavoriteMeal = () => {\r\n        context.onSendProductToFavorites(currentMeal);\r\n        setIsFavoriteMeal(true);\r\n    }\r\n\r\n    const {\r\n        mealTitle,\r\n        mealImage,\r\n        instructions,\r\n        ingredients,\r\n        categoryMeal\r\n    } = parsedData;\r\n\r\n    return(\r\n        <SingleProductWrapper>\r\n            {!mealImage ? <Loader/>\r\n                :\r\n                <>\r\n                    <h2 className=\"product_title\">{mealTitle}</h2>\r\n                    <div className=\"product_options\">\r\n                        <img src={mealImage} alt=\"\"/>\r\n                        <div className=\"product-item__image-panel\">\r\n                            {isFavoriteMeal ?\r\n                                <GiHeartWings\r\n                                    data-testid=\"favorite-icon\"\r\n                                    onClick={onRemoveFavoriteMeal}\r\n                                />\r\n                                :\r\n                                <AiOutlineHeart\r\n                                    data-testid=\"not-favorite-icon\"\r\n                                    onClick={onAddFavoriteMeal}\r\n                                />\r\n                            }\r\n                        </div>\r\n                        <NavLink className=\"product_category\"\r\n                                 onClick={() => context.getCategoryList(categoryMeal)}\r\n                                 to={{\r\n                                     pathname: \"/\"\r\n                                 }}\r\n                        >\r\n                            {categoryMeal}\r\n                        </NavLink>\r\n                        <ol className=\"engridients\">\r\n                            <p>Ingredients: </p>\r\n                            {ingredients?.map((item, index) => {\r\n                                return <li key={index}>{item}</li>\r\n                            }) ?? null}\r\n                        </ol>\r\n                    </div>\r\n                    <h3>How to do it?!...</h3>\r\n                    <ContentText text={instructions}/>\r\n                </>\r\n            }\r\n        </SingleProductWrapper>\r\n    );\r\n}\r\n\r\nexport default SingleProductContent;\r\n","import './App.css';\r\nimport Header from \"./components/Header\";\r\nimport TopProductItemsWrapper from \"./components/top-components/TopProductItemsWrapper\";\r\nimport {\r\n    AppContext,\r\n    getProductFromLocalStorage,\r\n    onSendProductToFavorites,\r\n    onRemoveProductFromFavorites,\r\n    parseSingleMealData,\r\n} from \"./api/context\";\r\nimport { SingleMealT } from './api/context';\r\nimport React, {useEffect, useState} from \"react\";\r\nimport ContentProductItemsWrapper from \"./components/ContentProductItemsWrapper\";\r\nimport {\r\n    getCategoryMealsListByCategoryName,\r\n    getMealByRandom,\r\n    searchMealsByName\r\n} from \"./api/recipies-api\";\r\nimport SingleProductContent from \"./components/SingleProductContent\";\r\nimport {FAVORITES, RECIPIE_CATEGORY_PATH, SINGLE_RECIPIE_PATH, RECIPIE_FAVOURITE_PATH} from \"./api/config\";\r\nimport {Route, Switch, useHistory, withRouter, matchPath} from \"react-router-dom\";\r\n\r\ntype CategoryProductT = {\r\n    category?: string,\r\n    status: boolean\r\n}\r\n\r\nfunction App() {\r\n  const [mealsListBySearch, setMealsListBySearch] = useState<Array<SingleMealT>>([]);\r\n  const [mealsListByDefault, setMealsListByDefault] = useState<Array<SingleMealT>>([]);\r\n  const [showCategoryProducts, setShowCategoryProducts] = useState<CategoryProductT>({category: '', status: false});\r\n  const { location } = useHistory();\r\n  //Check if current pathname is matched or with '/category', or '/recipie/'\r\n  const matchedRoute = matchPath(location.pathname, [RECIPIE_CATEGORY_PATH, RECIPIE_FAVOURITE_PATH]);\r\n  const { path } = matchedRoute ?? {};\r\n\r\n  useEffect(() => {\r\n      //Fill list of Default meal if mealsListBySearch is empty\r\n      if(mealsListByDefault.length < 5 && !mealsListBySearch.length){\r\n          getMealByRandom().then((meal) => setMealsListByDefault([...mealsListByDefault, meal])) ;\r\n      }\r\n  },[mealsListByDefault, mealsListBySearch]);\r\n\r\n  useEffect(() => {\r\n      if(!path) {\r\n          return;\r\n      }\r\n      if(path === RECIPIE_CATEGORY_PATH) {\r\n          const categoryName = location.pathname.split('/').slice(-1);\r\n          if(!categoryName){\r\n              return;\r\n          }\r\n          const [category] = categoryName;\r\n          getCategoryList(category);\r\n      }\r\n      if(path === RECIPIE_FAVOURITE_PATH) {\r\n          getFavoritesMealsList();\r\n      }\r\n  }, [path, location.pathname]);\r\n\r\n  //get MealsList By Search\r\n    const getMealsBySearch = (recipeName: string | null) => {\r\n        if(!recipeName) {\r\n            return;\r\n        }\r\n        searchMealsByName(recipeName)\r\n        .then((meals) => {\r\n            setMealsListBySearch([meals]);\r\n            setShowCategoryProducts({category: recipeName, status: true});\r\n        });\r\n    };\r\n\r\n   //get Category MealsList\r\n  const getCategoryList = (categoryName: string | null) => {\r\n      if(!categoryName) {\r\n          return;\r\n      }\r\n      getCategoryMealsListByCategoryName(categoryName)\r\n      .then((meal) => {\r\n          setMealsListBySearch([meal]);\r\n          setShowCategoryProducts({category: categoryName, status: true});\r\n      });\r\n  };\r\n\r\n    //get Favorites Meals\r\n    const getFavoritesMealsList = () => {\r\n       setMealsListBySearch([...getProductFromLocalStorage(FAVORITES)]);\r\n       setShowCategoryProducts({category: \"Favorites Meals\", status: true});\r\n   }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n        <AppContext.Provider\r\n            value={{\r\n                getMealsBySearch,\r\n                getFavoritesMealsList,\r\n                setMealsListByDefault,\r\n                parseSingleMealData,\r\n                getCategoryList,\r\n                onSendProductToFavorites,\r\n                onRemoveProductFromFavorites,\r\n            }}\r\n        >\r\n            <Header/>\r\n            {/*{Show meals by categories}*/}\r\n            <TopProductItemsWrapper />\r\n            <Switch>\r\n                {/*//Show by default ContentProductItemsWrapper with a list of the products*/}\r\n                <Route exact path=\"/\" render={() => <ContentProductItemsWrapper\r\n                                                    meals={mealsListBySearch.length > 0 ? mealsListBySearch : mealsListByDefault}\r\n                                                    showCategoryTitle={showCategoryProducts.status}\r\n                                                    categoryTitle={showCategoryProducts.category}\r\n                />}/>\r\n                <Route exact path={`${RECIPIE_CATEGORY_PATH}:name`} render={() => <ContentProductItemsWrapper\r\n                                                                    meals={mealsListBySearch}\r\n                                                                    showCategoryTitle={showCategoryProducts.status}\r\n                                                                    categoryTitle={showCategoryProducts.category}\r\n                />}/>\r\n                <Route exact path={RECIPIE_FAVOURITE_PATH}  render={() => <ContentProductItemsWrapper\r\n                                                            meals={mealsListBySearch}\r\n                                                            showCategoryTitle={showCategoryProducts.status}\r\n                                                            categoryTitle={showCategoryProducts.category}\r\n                />}/>\r\n                <Route exact path={`${SINGLE_RECIPIE_PATH}:id`} component={SingleProductContent}/>\r\n            </Switch>\r\n        </AppContext.Provider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}